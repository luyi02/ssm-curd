<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

<!-- Spring的配置文件 -->

<!--1. 扫描包 -->
<context:component-scan base-package="com.luyi">
	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
</context:component-scan>


<!-- 2.配置数据源 -->
<context:property-placeholder location="classpath:dbconfig.properties"/>
<bean id = "pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	<property name="jdbcUrl" value="${jdbc.jdbcurl}"></property>
	<property name="driverClass" value="${jdbc.driverclass}"></property>
	<property name="user" value="${jdbc.username}"></property>
	<property name="password" value="${jdbc.password}"></property>
</bean>

<!--3. 配置和mybatis的整合 -->

<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<!-- 指定mybatis全局配置文件的位置 -->
	<property name="configLocation" value="classpath:mybatis-config.xml"> </property>
	<property name="dataSource" ref="pooledDataSource"></property>
	<!-- 指定mybatis，mapper文件的位置 -->
	<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
</bean>

<!--4. 配置扫描器，将mybatis接口的实现加入到ioc容器中 -->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<!-- 扫描所有dao接口的实现，加入到ioc容器中 -->
	<property name="basePackage" value="com.luyi.dao"></property>
</bean>

<!-- 配置一个可以执行批量的sqlSession -->
<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	<constructor-arg name="executorType" value="BATCH"></constructor-arg>
</bean>

<!-- 5.事务控制的配置 -->
<bean id = "transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<!-- 控制住数据源 -->
	<property name="dataSource" ref="pooledDataSource"></property>
</bean>
<!-- 6.开启基于注解的事务，使用xml配置形式的事务） -->
<aop:config>
	<!-- 切入点表达式 -->
	<aop:pointcut expression="execution(* com.luyi.service..*(..))" id="txPoint"/>
	<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
</aop:config>

<!-- 配置事务增强，事务如何切入 -->
<tx:advice id="txAdvice" transaction-manager="transactionManager">
	<tx:attributes>
		<!-- 所有方法都是事务方法 -->
		<tx:method name="*"/>
		<!-- 以get开头的方法都设置为是只读 -->
		<tx:method name="get*" read-only="true"/>
	</tx:attributes>
</tx:advice>
 
</beans>
